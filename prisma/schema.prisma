generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  PATIENT
  HEALTH_AGENT
}

enum MedicineTakenStatus {
  TAKEN
  NOT_TAKEN
  TAKEN_LATE
}

model Hospital {
  id         String   @id @default(uuid())
  name       String   @unique
  users      User[]
  listVideos Video[]
  listTips   Tip[]
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("hospital")
}

model Video {
  id         String   @id @default(uuid())
  title      String
  url        String
  hospital   Hospital @relation(fields: [hospitalId], references: [id])
  hospitalId String   @map("hospital_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("videos")
}

model Tip {
  id         String   @id @default(uuid())
  tip        String
  hospital   Hospital @relation(fields: [hospitalId], references: [id])
  hospitalId String   @map("hospital_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("tips")
}

model User {
  id            String          @id @default(uuid())
  cpf           String          @unique
  name          String
  role          Role
  password      String
  hospital      Hospital        @relation(fields: [hospitalId], references: [id])
  hospitalId    String          @map("hospital_id")
  bloodPressure BloodPressure[]
  medicines     Medicine[]
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")

  @@map("users")
}

model Medicine {
  id            String          @id @default(uuid())
  title         String
  patient       User            @relation(fields: [patientId], references: [id])
  patientId     String          @map("patient_id")
  interval      String
  dosage        String
  medicineTaken MedicineTaken[]
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")

  @@map("medicines")
}

model MedicineTaken {
  id         String              @id @default(uuid())
  medicine   Medicine            @relation(fields: [medicineId], references: [id])
  medicineId String              @map("medicine_id")
  status     MedicineTakenStatus
  createdAt  DateTime            @default(now()) @map("created_at")
  updatedAt  DateTime            @updatedAt @map("updated_at")

  @@map("medicine-taken")
}

model BloodPressure {
  id        String   @id @default(uuid())
  patient   User     @relation(fields: [patientId], references: [id])
  patientId String   @map("patient_id")
  systolic  Int
  diastolic Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("blood-pressure")
}
